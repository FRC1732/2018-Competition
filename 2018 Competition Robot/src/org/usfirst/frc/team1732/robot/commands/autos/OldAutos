Old autos

// score in the right scale, pickup 2nd from the left cube
			System.out.println("Scale straight, switch opposite");
			PointProfile profile1 = Robot.paths.scaleRightStraight;
			double time1 = profile1.getTotalTimeSec();
			double percent1 = 0.5;
			// score in the scale
			addSequential(new CommandGroup() {
				{
					addParallel(new CommandGroup() {
						{
							addSequential(new Wait(time1 * percent1));
							addSequential(
									new ArmElevatorSetPosition(Arm.Positions.TUCK, Elevator.Positions.SCALE_AUTO));
						}
					});
					addSequential(new FollowVelocityPath(profile1));
				}
			});
			addSequential(new ManipAutoEject(0.5));
			PointProfile profile2 = Robot.paths.rightCubeGrabLeftSwitch;
			// addSequential(new ManipSetOut(0));
			addSequential(new ManipSetOut(0));
			addSequential(new CommandGroup() {
				{
					addParallel(new ArmElevatorSetPosition(Arm.Positions.INTAKE, Elevator.Positions.INTAKE));
					addSequential(new FollowVelocityPath(profile2));
					addSequential(new DriveVoltage(0, 0, NeutralMode.Brake));
				}
			});
			PointProfile profile20 = Robot.paths.driveBackwardSlightlyMore;
			addSequential(new ManipSetIn());
			addSequential(new FollowVelocityPathLimelight(profile20, 0.2));
			addSequential(new DriveVoltage(0, 0, NeutralMode.Brake));
			PointProfile profile3 = Robot.paths.driveForwardSlightly;
			addSequential(new CommandGroup() {
				{
					addParallel(new CommandGroup() {
						{
							addSequential(new ArmElevatorSetPosition(Arm.Positions.SWITCH, Elevator.Positions.HUMAN));
							addSequential(new ManipSetStop());
						}
					});
					// addSequential(new ArmElevatorSetPosition(Arm.Positions.SWITCH,
					// Elevator.Positions.HUMAN));
					// addSequential(new ArmMagicPosition(Arm.Positions.SWITCH));
					// addSequential(new ElevatorMagicPosition(Elevator.Positions.HUMAN));
					addSequential(new FollowVelocityPath(profile3));
					addSequential(new DriveVoltage(0, 0, NeutralMode.Brake));
				}
			});
			PointProfile profile4 = Robot.paths.driveBackwardSlightlyMore;
			double time4 = profile4.getTotalTimeSec();
			addParallel(new CommandGroup() {
				{
					addSequential(new Wait(0.7 * time4));
					addSequential(new ManipAutoEject(0.5));
				}
			});
			addSequential(new FollowVelocityPath(profile4));
			addSequential(new DriveVoltage(0, 0, NeutralMode.Brake));